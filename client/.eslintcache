[{"F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\index.js":"1","F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\App.js":"2","F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\reportWebVitals.js":"3","F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\components\\layout\\Navbar.js":"4","F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\components\\layout\\Landing.js":"5","F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\components\\auth\\Register.js":"6","F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\components\\auth\\Login.js":"7","F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\store.js":"8","F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\reducers\\index.js":"9","F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\reducers\\alert.js":"10","F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\actions\\types.js":"11","F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\actions\\alert.js":"12","F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\components\\layout\\Alert.js":"13","F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\actions\\auth.js":"14","F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\reducers\\auth.js":"15","F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\utils\\setAuthToken.js":"16","F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\components\\dashboard\\Dashboard.js":"17","F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\components\\routing\\PrivateRoute.js":"18","F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\actions\\profile.js":"19","F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\reducers\\profile.js":"20","F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\components\\layout\\Spinner.js":"21","F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\components\\profile-forms\\CreateProfile.js":"22","F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\components\\dashboard\\DashboardActions.js":"23","F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\components\\profile-forms\\EditProfile.js":"24","F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\components\\profile-forms\\AddExperience.js":"25","F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\components\\profile-forms\\AddEducation.js":"26","F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\components\\dashboard\\Experience.js":"27","F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\components\\dashboard\\Education.js":"28"},{"size":246,"mtime":1608142664024,"results":"29","hashOfConfig":"30"},{"size":2256,"mtime":1608633556787,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":499162500000,"results":"32","hashOfConfig":"30"},{"size":1475,"mtime":1608474216915,"results":"33","hashOfConfig":"30"},{"size":1153,"mtime":1608474472038,"results":"34","hashOfConfig":"30"},{"size":2964,"mtime":1608440369706,"results":"35","hashOfConfig":"30"},{"size":1959,"mtime":1608440362329,"results":"36","hashOfConfig":"30"},{"size":399,"mtime":1608366437010,"results":"37","hashOfConfig":"30"},{"size":206,"mtime":1608472569374,"results":"38","hashOfConfig":"30"},{"size":391,"mtime":1608367650273,"results":"39","hashOfConfig":"30"},{"size":626,"mtime":1608702141482,"results":"40","hashOfConfig":"30"},{"size":342,"mtime":1608372241476,"results":"41","hashOfConfig":"30"},{"size":507,"mtime":1608369557342,"results":"42","hashOfConfig":"30"},{"size":2094,"mtime":1608489103731,"results":"43","hashOfConfig":"30"},{"size":1121,"mtime":1608702280296,"results":"44","hashOfConfig":"30"},{"size":253,"mtime":1608438433676,"results":"45","hashOfConfig":"30"},{"size":1978,"mtime":1608707548522,"results":"46","hashOfConfig":"30"},{"size":703,"mtime":1608443882824,"results":"47","hashOfConfig":"30"},{"size":4501,"mtime":1608702214923,"results":"48","hashOfConfig":"30"},{"size":786,"mtime":1608621830560,"results":"49","hashOfConfig":"30"},{"size":302,"mtime":1608488790809,"results":"50","hashOfConfig":"30"},{"size":7039,"mtime":1608580572890,"results":"51","hashOfConfig":"30"},{"size":635,"mtime":1608556810852,"results":"52","hashOfConfig":"30"},{"size":8298,"mtime":1608580553493,"results":"53","hashOfConfig":"30"},{"size":3555,"mtime":1608632457769,"results":"54","hashOfConfig":"30"},{"size":3636,"mtime":1608633652405,"results":"55","hashOfConfig":"30"},{"size":1451,"mtime":1608702638878,"results":"56","hashOfConfig":"30"},{"size":1437,"mtime":1608707303484,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},"tin863",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"61"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"61"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"61"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"61"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"61"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"61"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"61"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\index.js",["123"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n",["124","125"],"F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\App.js",[],"F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\reportWebVitals.js",[],"F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\components\\layout\\Navbar.js",[],"F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\components\\layout\\Landing.js",[],"F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\components\\auth\\Register.js",[],"F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\components\\auth\\Login.js",[],"F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\store.js",[],"F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\reducers\\index.js",[],"F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\reducers\\alert.js",["126"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter((alert) => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\actions\\types.js",[],"F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\actions\\alert.js",[],"F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\components\\layout\\Alert.js",[],"F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\actions\\auth.js",[],"F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\reducers\\auth.js",["127"],"F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\utils\\setAuthToken.js",[],"F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\components\\dashboard\\Dashboard.js",["128"],"F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\components\\routing\\PrivateRoute.js",["129"],"import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport auth from '../../reducers/auth';\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  auth: { isAuthenticated, loading },\r\n  ...rest\r\n}) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      !isAuthenticated && !loading ? (\r\n        <Redirect to='/login' />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\actions\\profile.js",["130"],"F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\reducers\\profile.js",["131"],"import {\r\n  GET_PROFILE,\r\n  PROFILE_ERROR,\r\n  CLEAR_PROFILE,\r\n  UPDATE_PROFILE,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  profile: null,\r\n  profiles: [],\r\n  repos: [],\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_PROFILE:\r\n    case UPDATE_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: payload,\r\n        loading: false,\r\n      };\r\n    case PROFILE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n    case CLEAR_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: null,\r\n        repos: [],\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\components\\layout\\Spinner.js",["132"],"import React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nexport default () => {\r\n  return (\r\n    <Fragment>\r\n      <img\r\n        src={spinner}\r\n        style={{ width: '200px', margin: 'auto', display: 'block' }}\r\n        alt='Loading...'\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n","F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\components\\profile-forms\\CreateProfile.js",[],"F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\components\\dashboard\\DashboardActions.js",[],"F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\components\\profile-forms\\EditProfile.js",["133"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\r\n\r\nconst EditProfile = ({\r\n  profile: { profile, loading },\r\n  createProfile,\r\n  getCurrentProfile,\r\n  history,\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    website: '',\r\n    location: '',\r\n    status: '',\r\n    skills: '',\r\n    githubusername: '',\r\n    bio: '',\r\n    twitter: '',\r\n    facebook: '',\r\n    linkedin: '',\r\n    youtube: '',\r\n    instagram: '',\r\n  });\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n\r\n    setFormData({\r\n      company: loading || !profile.company ? '' : profile.company,\r\n      website: loading || !profile.website ? '' : profile.website,\r\n      location: loading || !profile.location ? '' : profile.location,\r\n      status: loading || !profile.status ? '' : profile.status,\r\n      skills: loading || !profile.skills ? '' : profile.skills,\r\n      githubusername:\r\n        loading || !profile.githubusername ? '' : profile.githubusername,\r\n      bio: loading || !profile.bio ? '' : profile.bio,\r\n      twitter: loading || !profile.social ? '' : profile.social.twitter,\r\n      facebook: loading || !profile.social ? '' : profile.social.facebook,\r\n      linkedin: loading || !profile.social ? '' : profile.social.linkedin,\r\n      youtube: loading || !profile.social ? '' : profile.social.youtube,\r\n      instagram: loading || !profile.social ? '' : profile.social.instagram,\r\n    });\r\n  }, [loading]);\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    createProfile(formData, history, true);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Create Your Profile</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <select name='status' value={status} onChange={(e) => onChange(e)}>\r\n            <option value='0'>* Select Professional Status</option>\r\n            <option value='Developer'>Developer</option>\r\n            <option value='Junior Developer'>Junior Developer</option>\r\n            <option value='Senior Developer'>Senior Developer</option>\r\n            <option value='Manager'>Manager</option>\r\n            <option value='Student or Learning'>Student or Learning</option>\r\n            <option value='Instructor'>Instructor or Teacher</option>\r\n            <option value='Intern'>Intern</option>\r\n            <option value='Other'>Other</option>\r\n          </select>\r\n          <small className='form-text'>\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Website'\r\n            name='website'\r\n            value={website}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n            value={location}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            City & state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Skills'\r\n            name='skills'\r\n            value={skills}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Github Username'\r\n            name='githubusername'\r\n            value={githubusername}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            placeholder='A short bio of yourself'\r\n            name='bio'\r\n            value={bio}\r\n            onChange={(e) => onChange(e)}\r\n          ></textarea>\r\n          <small className='form-text'>Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className='my-2'>\r\n          <button\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n            type='button'\r\n            className='btn btn-light'\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-twitter fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Twitter URL'\r\n                name='twitter'\r\n                value={twitter}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-facebook fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Facebook URL'\r\n                name='facebook'\r\n                value={facebook}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-youtube fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='YouTube URL'\r\n                name='youtube'\r\n                value={youtube}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-linkedin fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Linkedin URL'\r\n                name='linkedin'\r\n                value={linkedin}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-instagram fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Instagram URL'\r\n                name='instagram'\r\n                value={instagram}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <Link className='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEditProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\r\n  withRouter(EditProfile)\r\n);\r\n","F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\components\\profile-forms\\AddExperience.js",["134"],"import React, { Fragment, useState } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addExperience } from '../../actions/profile';\r\n\r\nconst AddExperience = ({ addExperience, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    title: '',\r\n    location: '',\r\n    from: '',\r\n    to: '',\r\n    current: false,\r\n    description: '',\r\n  });\r\n\r\n  const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n  const { company, title, location, from, to, current, description } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 class='large text-primary'>Add An Experience</h1>\r\n      <p class='lead'>\r\n        <i class='fas fa-code-branch'></i> Add any developer/programming\r\n        positions that you have had in the past\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form\r\n        class='form'\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          addExperience(formData, history);\r\n        }}\r\n      >\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Job Title'\r\n            name='title'\r\n            value={title}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n            value={location}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <h4>From Date</h4>\r\n          <input\r\n            type='date'\r\n            name='from'\r\n            value={from}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <p>\r\n            <input\r\n              type='checkbox'\r\n              name='current'\r\n              checked={current}\r\n              value={current}\r\n              onChange={(e) => {\r\n                setFormData({ ...formData, current: !current });\r\n                toggleDisabled(!toDateDisabled);\r\n              }}\r\n            />{' '}\r\n            Current Job\r\n          </p>\r\n        </div>\r\n        <div class='form-group'>\r\n          <h4>To Date</h4>\r\n          <input\r\n            type='date'\r\n            name='to'\r\n            value={to}\r\n            onChange={(e) => onChange(e)}\r\n            disabled={toDateDisabled ? 'disabled' : ''}\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <textarea\r\n            name='description'\r\n            cols='30'\r\n            rows='5'\r\n            placeholder='Job Description'\r\n            value={description}\r\n            onChange={(e) => onChange(e)}\r\n          ></textarea>\r\n        </div>\r\n        <input type='submit' class='btn btn-primary my-1' />\r\n        <Link class='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAddExperience.propTypes = {\r\n  addExperience: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addExperience })(AddExperience);\r\n","F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\components\\profile-forms\\AddEducation.js",["135"],"import React, { Fragment, useState } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addEducation } from '../../actions/profile';\r\n\r\nconst AddEducation = ({ addEducation, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    school: '',\r\n    degree: '',\r\n    fieldofstudy: '',\r\n    from: '',\r\n    to: '',\r\n    current: false,\r\n    description: '',\r\n  });\r\n\r\n  const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n  const {\r\n    school,\r\n    degree,\r\n    fieldofstudy,\r\n    from,\r\n    to,\r\n    current,\r\n    description,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 class='large text-primary'>Add Your Education</h1>\r\n      <p class='lead'>\r\n        <i class='fas fa-code-branch'></i> Add any school, bootcamp, etc that\r\n        you have attended\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form\r\n        class='form'\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          addEducation(formData, history);\r\n        }}\r\n      >\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* School or Bootcamp'\r\n            name='school'\r\n            value={school}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Degree or Certificate'\r\n            name='degree'\r\n            value={degree}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Field of Study'\r\n            name='fieldofstudy'\r\n            value={fieldofstudy}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <h4>From Date</h4>\r\n          <input\r\n            type='date'\r\n            name='from'\r\n            value={from}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <p>\r\n            <input\r\n              type='checkbox'\r\n              name='current'\r\n              checked={current}\r\n              value={current}\r\n              onChange={(e) => {\r\n                setFormData({ ...formData, current: !current });\r\n                toggleDisabled(!toDateDisabled);\r\n              }}\r\n            />{' '}\r\n            Current School or Bootcamp\r\n          </p>\r\n        </div>\r\n        <div class='form-group'>\r\n          <h4>To Date</h4>\r\n          <input\r\n            type='date'\r\n            name='to'\r\n            value={to}\r\n            onChange={(e) => onChange(e)}\r\n            disabled={toDateDisabled ? 'disabled' : ''}\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <textarea\r\n            name='description'\r\n            cols='30'\r\n            rows='5'\r\n            placeholder='Programme Description'\r\n            value={description}\r\n            onChange={(e) => onChange(e)}\r\n          ></textarea>\r\n        </div>\r\n        <input type='submit' class='btn btn-primary my-1' />\r\n        <Link class='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAddEducation.propTypes = {\r\n  addEducation: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addEducation })(AddEducation);\r\n","F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\components\\dashboard\\Experience.js",[],"F:\\Jeremy\\Udemy\\MERN Stack Front To Back\\devconnector\\client\\src\\components\\dashboard\\Education.js",[],{"ruleId":"136","severity":1,"message":"137","line":4,"column":8,"nodeType":"138","messageId":"139","endLine":4,"endColumn":23},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":5,"column":1,"nodeType":"146","endLine":16,"endColumn":2},{"ruleId":"144","severity":1,"message":"145","line":19,"column":1,"nodeType":"146","endLine":54,"endColumn":2},{"ruleId":"147","severity":1,"message":"148","line":19,"column":6,"nodeType":"149","endLine":19,"endColumn":8,"suggestions":"150"},{"ruleId":"136","severity":1,"message":"151","line":5,"column":8,"nodeType":"138","messageId":"139","endLine":5,"endColumn":12},{"ruleId":"136","severity":1,"message":"152","line":174,"column":13,"nodeType":"138","messageId":"139","endLine":174,"endColumn":16},{"ruleId":"144","severity":1,"message":"145","line":16,"column":1,"nodeType":"146","endLine":43,"endColumn":2},{"ruleId":"144","severity":1,"message":"153","line":4,"column":1,"nodeType":"146","endLine":14,"endColumn":3},{"ruleId":"147","severity":1,"message":"154","line":48,"column":6,"nodeType":"149","endLine":48,"endColumn":15,"suggestions":"155"},{"ruleId":"136","severity":1,"message":"156","line":2,"column":16,"nodeType":"138","messageId":"139","endLine":2,"endColumn":26},{"ruleId":"136","severity":1,"message":"156","line":2,"column":16,"nodeType":"138","messageId":"139","endLine":2,"endColumn":26},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["157"],"no-negated-in-lhs",["158"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCurrentProfile'. Either include it or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["159"],"'auth' is defined but never used.","'res' is assigned a value but never used.","Assign arrow function to a variable before exporting as module default","React Hook useEffect has missing dependencies: 'getCurrentProfile', 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["160"],"'withRouter' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},"Update the dependencies array to be: [getCurrentProfile]",{"range":"165","text":"166"},"Update the dependencies array to be: [getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]",{"range":"167","text":"168"},[597,599],"[getCurrentProfile]",[1690,1699],"[getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]"]